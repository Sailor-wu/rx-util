{"version":3,"file":"rx-util.js","sources":["../src/module/ajax/download.js","../src/module/ajax/downloadString.js","../src/module/ajax/downloadUrl.js","../src/module/ajax/getCookies.js","../src/module/ajax/loadResource.js","../src/module/ajax/parseUrl.js","../src/module/ajax/readLocal.js","../src/module/date/dateFormat.js","../src/module/ajax/spliceParams.js","../src/module/ajax/fetchTimeout.js","../src/module/ajax/strToArrayBuffer.js","../src/module/function/wait.js","../src/module/ajax/FetchLimiting.js","../src/module/array/asIterator.js","../src/module/array/asyncFlatMap.js","../src/module/array/flatMap.js","../src/module/array/groupBy.js","../src/module/array/range.js","../src/module/array/toObject.js","../src/module/array/uniqueBy.js","../src/module/array/arrayToMap.js","../src/module/string/fill.js","../src/module/date/dateParse.js","../src/module/date/strToDate.js","../src/module/dom/copyText.js","../src/module/dom/createElByString.js","../src/module/dom/getCusorPostion.js","../src/module/dom/setCusorPostion.js","../src/module/dom/insertText.js","../src/module/string/toLowerCase.js","../src/module/dom/isEditable.js","../src/module/dom/lastFocus.js","../src/module/dom/removeEl.js","../src/module/dom/removeText.js","../src/module/event/watchEventListener.js","../src/module/formdata/appends.js","../src/module/formdata/deletes.js","../src/module/formdata/sets.js","../src/module/formdata/formDataToArray.js","../src/module/formdata/objToFormData.js","../src/module/function/debounce.js","../src/module/function/returnItself.js","../src/module/function/safeExec.js","../src/module/function/singleModel.js","../src/module/function/StateMachine.js","../src/module/function/throttle.js","../src/module/function/timing.js","../src/module/function/waitResource.js","../src/module/function/watch.js","../src/module/function/watchObject.js","../src/module/string/format.js","../src/module/string/isFloat.js","../src/module/string/isNumber.js","../src/module/string/toUpperCase.js","../src/module/string/blankToNull.js","../src/module/obj/blankToNullField.js","../src/module/obj/emptyAllField.js","../src/module/obj/excludeFields.js","../src/module/obj/mapToObject.js","../src/module/number/randomInt.js","../src/module/date/getYearWeek.js","../src/module/date/dateConstants.js","../src/module/number/isRange.js","../src/module/date/DateConstants.js","../src/module/date/dateEnhance.js","../src/module/date/dateBetween.js","../src/module/function/onec.js","../src/module/function/onecOfSameParam.js","../src/module/function/returnReasonableItself.js","../src/module/array/filterItems.js","../src/module/array/arrayDiffBy.js","../src/module/number/autoIncrement.js","../src/module/string/StringConverter.js","../src/module/obj/deepFreeze.js","../src/module/obj/deepProxy.js","../src/module/function/curry.js","../src/module/array/sortBy.js","../src/module/date/DateFormatter.js","../src/module/function/compose.js"],"sourcesContent":["/**\r\n * 在浏览器上下载二进制资源\r\n * @param {Blob} blob 要下载的二进制资源\r\n * @param {String} filename 文件名\r\n */\r\nexport function download (blob, filename = 'unknown') {\r\n  // 创建隐藏的可下载链接\r\n  const eleLink = document.createElement('a')\r\n  eleLink.download = filename\r\n  eleLink.style.display = 'none'\r\n  // 为 link 赋值\r\n  eleLink.href = URL.createObjectURL(blob)\r\n  // 触发点击\r\n  document.body.appendChild(eleLink)\r\n  eleLink.click()\r\n  // 然后移除\r\n  document.body.removeChild(eleLink)\r\n}\r\n","import { download } from './download'\r\n\r\n/**\r\n * 在浏览器上下载文本内容\r\n * @param {String} str 字符串内容\r\n * @param {String} [filename='unknown.txt'] 下载文件名，没有则默认为链接中的文件名\r\n */\r\nexport async function downloadString (str, filename = 'unknown.txt') {\r\n  const blob = new Blob([str], {\r\n    type: 'text/plain',\r\n  })\r\n  download(blob, filename)\r\n}\r\n","import { download } from './download'\r\n\r\n/**\r\n * 根据 url 下载二进制资源\r\n * @param {String} url 下载请求信息\r\n * @param {String} [filename] 下载文件名，没有则默认为链接中的文件名\r\n */\r\nexport async function downloadUrl (\r\n  url,\r\n  filename = url.substr(url.lastIndexOf('/'))\r\n) {\r\n  try {\r\n    const res = await fetch(url)\r\n    const blob = await res.blob()\r\n    download(blob, filename)\r\n  } catch (error) {\r\n    return console.log('下载出错了 ', error)\r\n  }\r\n}\r\n","/**\r\n * 获取 cookie 键值映射 Map\r\n * @returns {Map.<String,String>} cookie 键值映射 Map\r\n */\r\nexport function getCookies () {\r\n  return document.cookie\r\n    .split(';')\r\n    .map(str => str.split('='))\r\n    .map(arr => [arr[0].trim(), arr[1].trim()])\r\n    .reduce((res, [k, v]) => res.set(k, v), new Map())\r\n}\r\n","/**\r\n * 将 url 中的内容加载到元素上\r\n * 注：domSelector 必须有 src 属性用以将加载完成的资源赋值给其，加载默认是异步的\r\n * @param {RequestInfo} url url 资源\r\n * @param {HTMLImageElement | HTMLAudioElement | HTMLVideoElement | HTMLTrackElement | HTMLScriptElement} dom dom 元素\r\n * @param {RequestInit} [init] 初始化参数, 实为 fetch() 的参数以及一些自定义的参数，默认 {}\r\n * 关于 fetch 具体可以参考 <https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch>\r\n */\r\nexport async function loadResource (url, dom, init = {}) {\r\n  const res = await fetch(url, init)\r\n  const blob = await res.blob()\r\n  // 生成一个本地的 url 并赋值给 src 属性\r\n  dom.src = window.URL.createObjectURL(blob)\r\n}\r\n","/**\r\n * Url 对象\r\n * @class UrlObject\r\n */\r\nclass UrlObject {\r\n  /**\r\n   * 构造函数\r\n   * @param {Object} option 可选项\r\n   * @param {String} [option.href=''] 不包含网站域名的链接\r\n   * @param {String} [option.website=''] URL 站点\r\n   * @param {String} [option.protocol=''] 协议\r\n   * @param {String} [option.domain=''] 域名\r\n   * @param {String} [option.accessPath=''] 绝对路径,不包含参数\r\n   * @param {Object} [option.params={}] 参数列表,\r\n   * @param {String} [option.url=''] 原 url 链接\r\n   * @param {Number} [option.port=0] 端口号\r\n   */\r\n  constructor ({\r\n    href = '',\r\n    website = '',\r\n    protocol = '',\r\n    domain = '',\r\n    accessPath = '',\r\n    params = {},\r\n    url = '',\r\n    port = 0,\r\n  } = {}) {\r\n    /**\r\n     * @type {String} 不包含网站域名的链接\r\n     */\r\n    this.href = href\r\n    /**\r\n     * @type {String} URL 站点\r\n     */\r\n    this.website = website\r\n    /**\r\n     * @type {String} 协议\r\n     */\r\n    this.protocol = protocol\r\n    /**\r\n     * @type {String} 域名\r\n     */\r\n    this.domain = domain\r\n    /**\r\n     * @type {String} 绝对路径,不包含参数\r\n     */\r\n    this.accessPath = accessPath\r\n    /**\r\n     * @type {Object} 参数列表,\r\n     */\r\n    this.params = params\r\n    /**\r\n     * @type {String} 原 url 链接\r\n     */\r\n    this.url = url\r\n    /**\r\n     * @type {Number} 端口号\r\n     */\r\n    this.port = port\r\n  }\r\n}\r\n\r\n/**\r\n * 协议与默认端口映射表\r\n */\r\nconst protocol2Port = {\r\n  http: 80,\r\n  https: 443,\r\n  ssh: 22,\r\n  ftp: 21,\r\n}\r\n\r\n/**\r\n * 解析 url 字符串\r\n * @param {String} url url 字符串，不能为空\r\n * @returns {UrlObject} url 对象\r\n */\r\nexport function parseUrl (url) {\r\n  if (!url) {\r\n    throw new Error('url 不能为空')\r\n  }\r\n\r\n  const regexp = new RegExp('^((\\\\w+)://([\\\\w\\\\.]*)(:(\\\\d+))?)(.*)')\r\n  const temps = regexp.exec(url)\r\n  const res = new UrlObject({\r\n    url: url,\r\n    website: temps[1],\r\n    protocol: temps[2],\r\n    domain: temps[3],\r\n    // @ts-ignore\r\n    port: temps[5],\r\n    href: temps[6],\r\n  })\r\n  let temp = url.substr(res.website.length)\r\n  const markIndex = temp.indexOf('?')\r\n  if (markIndex === -1) {\r\n    res.accessPath = temp\r\n    return res\r\n  }\r\n  res.accessPath = temp.substr(0, markIndex)\r\n  if (res.accessPath.endsWith('/')) {\r\n    res.accessPath = res.accessPath.substring(0, res.accessPath.length - 1)\r\n  }\r\n  res.port = res.port || protocol2Port[res.protocol] || ''\r\n  // 解析参数列表\r\n  res.params = temp\r\n    .substr(markIndex + 1)\r\n    .split('&')\r\n    .map(str => str.split('='))\r\n    .filter(arr => arr[0] !== '')\r\n    .reduce((params, arr) => {\r\n      const k = decodeURIComponent(arr[0])\r\n      const v = decodeURIComponent(arr.length === 1 ? '' : arr[1])\r\n      // 如果已经存在了就认为是数组参数\r\n      const vs = params[k]\r\n      if (vs !== undefined) {\r\n        if (!Array.isArray(vs)) {\r\n          params[k] = [vs]\r\n        }\r\n        params[k].push(v)\r\n      } else {\r\n        params[k] = v\r\n      }\r\n      return params\r\n    }, {})\r\n  return res\r\n}\r\n","/**\r\n * 读取本地浏览器选择的文件\r\n * @param {File} file 选择的文件\r\n * @param {Object} option 可选项参数\r\n * @param { readLocal.DataURL | readLocal.Text | readLocal.BinaryString | readLocal.ArrayBuffer } [option.type=readLocal.DataURL] 读取的类型，默认按照二进制 url 读取\r\n * @param {String} [option.encoding='UTF-8'] 读取的编码格式，默认为 UTF-8\r\n * @returns {Promise} 返回了读取到的内容（异步）\r\n */\r\nexport function readLocal (\r\n  file,\r\n  { type = readLocal.DataURL, encoding = 'UTF-8' } = {}\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!file) {\r\n      reject(new Error('file not exists'))\r\n    }\r\n    const fr = new FileReader()\r\n    fr.onload = event => {\r\n      // @ts-ignore\r\n      resolve(event.target.result)\r\n    }\r\n    fr.onerror = error => {\r\n      reject(error)\r\n    }\r\n    fr[type](file, encoding)\r\n  })\r\n}\r\nreadLocal.DataURL = 'readAsDataURL'\r\nreadLocal.Text = 'readAsText'\r\nreadLocal.BinaryString = 'readAsBinaryString'\r\nreadLocal.ArrayBuffer = 'readAsArrayBuffer'\r\n","/**\r\n * 为 js 中的 Date 对象原型添加 format 格式化方法\r\n * @param {Date} date 要进行格式化的日期\r\n * @param {String} fmt 日期的格式\r\n * @returns {String} 格式化得到的结果\r\n */\r\nexport function dateFormat (date, fmt) {\r\n  const o = {\r\n    'y+': date.getFullYear(),\r\n    'M+': date.getMonth() + 1, // 月份\r\n    'd+': date.getDate(), // 日\r\n    'h+': date.getHours(), // 小时\r\n    'm+': date.getMinutes(), // 分\r\n    's+': date.getSeconds(), // 秒\r\n    'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\r\n    'S+': date.getMilliseconds(), // 毫秒\r\n  }\r\n  for (const k in o) {\r\n    if (!new RegExp('(' + k + ')').test(fmt)) {\r\n      continue\r\n    }\r\n    if (k === 'y+') {\r\n      fmt = fmt.replace(RegExp.$1, ('' + o[k]).substr(4 - RegExp.$1.length))\r\n    } else if (k === 'S+') {\r\n      let lens = RegExp.$1.length\r\n      lens = lens === 1 ? 3 : lens\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        ('00' + o[k]).substr(('' + o[k]).length - 1, lens)\r\n      )\r\n    } else {\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length)\r\n      )\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n","import { dateFormat } from './../date/dateFormat'\r\n\r\n/**\r\n * 默认的日期格式\r\n * 不加 Z 为本地日期时间\r\n */\r\nconst deteFormatter = 'yyyy-MM-ddThh:mm:ss.SSS'\r\n/**\r\n * 编码函数\r\n * @param {String} k 参数的名字\r\n * @param {String} v 参数的值\r\n */\r\nconst encode = (k, v) => encodeURIComponent(k) + '=' + encodeURIComponent(v)\r\n\r\n/**\r\n * 拼接参数字符串\r\n * @param {Object} params 参数对象\r\n * @returns {String} 拼接后的字符串\r\n */\r\nexport function spliceParams (params = {}) {\r\n  if (!(params instanceof Object)) {\r\n    throw new Error(`The parameter type must be Object: ${params}`)\r\n  }\r\n  return Array.from(Object.entries(params)).reduce((res, [k, v]) => {\r\n    if (v === undefined || v === null) {\r\n      return res\r\n    } else if (v instanceof Date) {\r\n      res += encode(k, dateFormat(v, deteFormatter))\r\n    } else if (v instanceof Array) {\r\n      res += v\r\n        .map(item =>\r\n          encode(\r\n            k,\r\n            item instanceof Date ? dateFormat(item, deteFormatter) : item\r\n          )\r\n        )\r\n        .join('&')\r\n    } else {\r\n      res += encode(k, v)\r\n    }\r\n    return (res += '&')\r\n  }, '')\r\n}\r\n","/**\r\n * 为 fetch 请求添加超时选项\r\n * 注：超时选项并非真正意义上的超时即取消请求，请求依旧正常执行完成，但会提前返回 reject 结果\r\n * @param {Promise} fetchPromise fetch 请求的 Promise\r\n * @param {Number} timeout 超时时间\r\n * @returns {Promise} 如果超时就提前返回 reject, 否则正常返回 fetch 结果\r\n */\r\nexport function fetchTimeout (fetchPromise, timeout) {\r\n  let abortFn = null\r\n  // 这是一个可以被 reject 的 Promise\r\n  const abortPromise = new Promise(function (resolve, reject) {\r\n    abortFn = function () {\r\n      reject(new Error('abort promise'))\r\n    }\r\n  })\r\n  // 有一个 Promise 完成就立刻结束\r\n  const abortablePromise = Promise.race([fetchPromise, abortPromise])\r\n  setTimeout(function () {\r\n    abortFn()\r\n  }, timeout)\r\n  return abortablePromise\r\n}\r\n","/**\r\n * 将字符串转为字符流\r\n *\r\n * @param {String} str 字符串\r\n * @returns {ArrayBuffer} 字符流对象\r\n */\r\nexport function strToArrayBuffer (str) {\r\n  const buf = new ArrayBuffer(str.length)\r\n  const view = new Uint8Array(buf)\r\n  for (let i = 0; i !== str.length; ++i) {\r\n    view[i] = str.charCodeAt(i) & 0xff\r\n  }\r\n  return buf\r\n}\r\n","/**\r\n * 等待指定的时间/等待指定表达式成立\r\n * 如果未指定等待条件则立刻执行\r\n * @param {Number|Function} [param] 等待时间/等待条件\r\n * @returns {Promise} Promise 对象\r\n */\r\nexport const wait = param => {\r\n  return new Promise(resolve => {\r\n    if (typeof param === 'number') {\r\n      setTimeout(resolve, param)\r\n    } else if (typeof param === 'function') {\r\n      const timer = setInterval(() => {\r\n        if (param()) {\r\n          clearInterval(timer)\r\n          resolve()\r\n        }\r\n      }, 100)\r\n    } else {\r\n      resolve()\r\n    }\r\n  })\r\n}\r\n","import { wait } from '../function/wait'\r\nimport { fetchTimeout } from './fetchTimeout'\r\n\r\n/**\r\n * 限制并发请求数量的 fetch 封装\r\n * @class FetchLimiting\r\n * @example\r\n * const fetchLimiting = new FetchLimiting()\r\n * fetchLimiting._fetch('/')\r\n *   .then(res => res.json())\r\n *   .then(json => console.log(json))\r\n */\r\nexport class FetchLimiting {\r\n  /**\r\n   * 构造函数\r\n   * @param {Object} [option] 可选配置项\r\n   * @param {Number} [option.timeout=10000] 超时毫秒数\r\n   * @param {Number} [option.limit=10] 最大并发数限制\r\n   */\r\n  constructor ({ timeout = 10000, limit = 10 }) {\r\n    /**\r\n     * @field timeout 超时毫秒数\r\n     */\r\n    this.timeout = timeout\r\n    /**\r\n     * @field limit 最大并发数限制\r\n     */\r\n    this.limit = limit\r\n    /**\r\n     * @field execCount 当前正在执行异步的数量\r\n     */\r\n    this.execCount = 0\r\n    /**\r\n     * @field waitArr 等待的队列\r\n     * @type {Array.<IArguments>}\r\n     */\r\n    this.waitArr = []\r\n  }\r\n\r\n  /**\r\n   * 执行一个请求\r\n   * 如果到达最大并发限制时就进行等待\r\n   * @param {RequestInfo} url 请求 url 信息\r\n   * @param {RequestInit} [init=undefined] 请求的其他可选项，默认为 undefined\r\n   * @returns {Promise} 如果超时就提前返回 reject, 否则正常返回 fetch 结果\r\n   */\r\n  async fetch (url, init) {\r\n    const _innerFetch = async () => {\r\n      this.execCount++\r\n      const args = this.waitArr.shift()\r\n      try {\r\n        // 这里的 args 实际上就是 arguments 对象，即上面的 url 和 init\r\n        // @ts-ignore\r\n        return await fetchTimeout(fetch(...args), this.timeout)\r\n      } finally {\r\n        this.execCount--\r\n      }\r\n    }\r\n    this.waitArr.push(arguments)\r\n    await wait(() => this.execCount < this.limit)\r\n    // 尝试启动等待队列\r\n    return _innerFetch()\r\n  }\r\n}\r\n","/**\r\n * 将一个 Iterator 迭代器转换为一个 Array\r\n * 目前 {@override Array.from} 已取代改函数\r\n * @param {Iterator.<Object>} iterator Iterator 迭代器\r\n * @return {Array.<Object>} Iterator 中每一项元素转换而得到的 Array\r\n */\r\nexport function asIterator (iterator) {\r\n  const arr = []\r\n  while (true) {\r\n    const next = iterator.next()\r\n    if (next.done) {\r\n      break\r\n    }\r\n    arr.push(next.value)\r\n  }\r\n  return arr\r\n}\r\n","/**\r\n * 将数组异步压平一层\r\n * @param {Array.<Object>} arr 数组\r\n * @param {Function} fn 映射函数，将一个元素映射为一个数组\r\n * @returns {Promise.<Array.<Object>>} 压平一层的数组\r\n */\r\nexport async function asyncFlatMap (arr, fn) {\r\n  let res = []\r\n  for (const i in arr) {\r\n    res = res.concat(await fn(arr[i]))\r\n  }\r\n  return res\r\n}\r\n","/**\r\n * 自行实现 flatMap，将数组压平一层\r\n * @param {Array.<Object>} arr 数组\r\n // @ts-ignore\r\n * @param {function(item:Object):Array.<Object>} fn 映射方法，将一个元素映射为一个数组\r\n * @returns {Array.<Object>} 压平一层的数组\r\n */\r\nexport function flatMap (arr, fn) {\r\n  // @ts-ignore\r\n  return arr.reduce((res, item) => res.concat(fn(item)), [])\r\n}\r\n","/**\r\n * js 数组按照某个条件进行分组\r\n *\r\n * @param {Array<Object>} arr 要进行分组的数组\r\n * @param {Function} fn 元素分组的方法\r\n * @returns {Map<Object,Object>} 对象 -> 数组映射对象\r\n */\r\nexport function groupBy (arr, fn) {\r\n  // 将元素按照分组条件进行分组得到一个 条件 -> 数组 的对象\r\n  return arr.reduce((res, item) => {\r\n    const name = fn(item)\r\n    // 如果已经有这个键了就直接追加, 否则先将之赋值为 [] 再追加元素\r\n    if (!res.has(name)) {\r\n      res.set(name, [])\r\n    }\r\n    res.get(name).push(item)\r\n    return res\r\n  }, new Map())\r\n}\r\n","/**\r\n * 创建一个等差数列数组\r\n * @param {Number} start 开始（包含）\r\n * @param {Number} end 结束（不包含）\r\n * @param {Number} [sep] 步长，默认为 1\r\n * @returns {Array.<Number>} 等差数列数组\r\n */\r\nexport function range (start, end, sep = 1) {\r\n  const arr = []\r\n  for (let i = start; i < end; i += sep) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n","/**\r\n * 将数组转化为一个 Object 对象\r\n * @deprecated 已废弃，请使用更好的 @override arrayToMap 替代\r\n * @param {Array.<Object>} arr 需要进行转换的数组\r\n * @param {Function} kFn 生成对象属性名的函数\r\n * @param {Function} [vFn] 生成对象属性值的函数，默认为数组中的迭代元素\r\n * @returns {Object} 转化得到的对象\r\n */\r\nexport function toObject (arr, kFn, vFn = item => item) {\r\n  return arr.reduce((res, item) => {\r\n    if (!res.hasOwnProperty(kFn(item))) {\r\n      res[kFn(item)] = vFn(item)\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n","/**\r\n * js 的数组去重方法\r\n * @param {Array.<Object>} arr 要进行去重的数组\r\n * @param {Function} [fn=item => JSON.stringify(item)] 唯一标识元素的方法，默认使用 {@link JSON.stringify()}\r\n * @returns {Array.<Object>} 进行去重操作之后得到的新的数组 (原数组并未改变)\r\n */\r\nexport function uniqueBy (arr, fn = item => JSON.stringify(item)) {\r\n  const obj = {}\r\n  return arr.filter(item =>\r\n    obj.hasOwnProperty(fn(item)) ? false : (obj[fn(item)] = true)\r\n  )\r\n}\r\n","/**\r\n * 将数组映射为 Map\r\n * @param {Array.<Object>} array 数组\r\n * @param {function} kFn 产生 Map 元素唯一标识的函数\r\n * @param {Function} [vFn] 产生 Map 值的函数，默认为返回数组的元素\r\n * @returns {Map.<Object,Object>} 映射产生的 map 集合\r\n */\r\nexport function arrayToMap (array, kFn, vFn = v => v) {\r\n  return array.reduce((res, item) => {\r\n    res.set(kFn(item), vFn(item))\r\n    return res\r\n  }, new Map())\r\n}\r\n","/**\r\n * 填充字符串到指定长度\r\n * @param {String} item 填充的字符串\r\n * @param {Number} len 填充的长度\r\n * @returns {String} 填充完成的字符串\r\n */\r\nexport function fill (item, len) {\r\n  if (len <= 0) {\r\n    return ''\r\n  }\r\n  return item + fill(item, len - 1)\r\n}\r\n","import { fill } from '../string/fill'\r\nimport { arrayToMap } from './../array/arrayToMap'\r\n\r\n/**\r\n * 日期格式化类\r\n * @class DateFormat\r\n */\r\nclass DateFormat {\r\n  /**\r\n   * 构造函数\r\n   * @param {String} name 日期格式的名称\r\n   * @param {String} format 日期的格式值\r\n   * @param {String} value 格式化得到的值\r\n   * @param {Number} index 需要替换位置的索引\r\n   */\r\n  constructor (name, format, value, index) {\r\n    /**\r\n     * @field 日期格式的名称\r\n     */\r\n    this.name = name\r\n    /**\r\n     * @field 日期的格式值\r\n     */\r\n    this.format = format\r\n    /**\r\n     * @field 格式化得到的值\r\n     */\r\n    this.value = value\r\n    /**\r\n     * @field 需要替换位置的索引\r\n     */\r\n    this.index = index\r\n  }\r\n}\r\n\r\n/**\r\n * 日期时间的正则表达式\r\n */\r\nconst dateFormats = {\r\n  year: 'y{4}|y{2}',\r\n  month: 'M{1,2}',\r\n  day: 'd{1,2}',\r\n  hour: 'h{1,2}',\r\n  minute: 'm{1,2}',\r\n  second: 's{1,2}',\r\n  milliSecond: 'S{1,3}',\r\n}\r\n\r\n/**\r\n * 解析字符串为 Date 对象\r\n * @param {String} dateStr 日期字符串\r\n * @param {String} fmt 日期字符串的格式，目前仅支持使用 y(年),M(月),d(日),h(时),m(分),s(秒),S(毫秒)\r\n * @returns {Date} 解析得到的 Date 对象\r\n */\r\nexport function dateParse (dateStr, fmt) {\r\n  const now = new Date()\r\n  // 如果没有格式化某项的话则设置为默认时间\r\n  const defaultDateValues = {\r\n    year: now.getFullYear().toString(),\r\n    month: '01',\r\n    day: '01',\r\n    hour: '00',\r\n    minute: '00',\r\n    second: '00',\r\n    milliSecond: '000',\r\n  }\r\n  // 保存对传入的日期字符串进行格式化的全部信息数组列表\r\n  const dateUnits = []\r\n  for (const fmtName in dateFormats) {\r\n    const regExp = new RegExp(dateFormats[fmtName])\r\n    if (regExp.test(fmt)) {\r\n      const matchStr = regExp.exec(fmt)[0]\r\n      const regexStr = fill('`', matchStr.length)\r\n      const index = fmt.indexOf(matchStr)\r\n      fmt = fmt.replace(matchStr, regexStr)\r\n      dateUnits.push(\r\n        new DateFormat(fmtName, fill('\\\\d', matchStr.length), null, index)\r\n      )\r\n    } else {\r\n      dateUnits.push(\r\n        new DateFormat(fmtName, null, defaultDateValues[fmtName], -1)\r\n      )\r\n    }\r\n  }\r\n  // 进行验证是否真的是符合传入格式的字符串\r\n  fmt = fmt.replace(new RegExp('`', 'g'), '\\\\d')\r\n  if (!new RegExp(`^${fmt}$`).test(dateStr)) {\r\n    return null\r\n  }\r\n  // 进行一次排序, 依次对字符串进行截取\r\n  dateUnits\r\n    // 过滤掉没有得到格式化的对象\r\n    .filter(({ format }) => format)\r\n    // 按照字符串中日期片段的索引进行排序\r\n    .sort(function (a, b) {\r\n      return a.index - b.index\r\n    })\r\n    // 获取到匹配的日期片段的值\r\n    .map(format => {\r\n      const matchDateUnit = new RegExp(format.format).exec(dateStr)\r\n      if (matchDateUnit !== null && matchDateUnit.length > 0) {\r\n        dateStr = dateStr.replace(matchDateUnit[0], '')\r\n        format.value = matchDateUnit[0]\r\n      }\r\n      return format\r\n    })\r\n    // 覆写到 dateStr 上面\r\n    .forEach(({ format }, i) => {\r\n      const matchDateUnit = new RegExp(format).exec(dateStr)\r\n      if (matchDateUnit !== null && matchDateUnit.length > 0) {\r\n        dateStr = dateStr.replace(matchDateUnit[0], '')\r\n        dateUnits[i].value = matchDateUnit[0]\r\n      }\r\n    })\r\n  // 将截取完成的信息封装成对象并格式化标准的日期字符串\r\n  const map = arrayToMap(dateUnits, item => item.name, item => item.value)\r\n  if (map.get('year').length === 2) {\r\n    map.set(\r\n      'year',\r\n      defaultDateValues.year.substr(0, 2).concat(map.get('year'))\r\n    )\r\n  }\r\n  // 注意：此处使用的是本地时间而非 UTC 时间\r\n  const date = `${map.get('year')}-${map.get('month')}-${map.get(\r\n    'day'\r\n  )}T${map.get('hour')}:${map.get('minute')}:${map.get('second')}.${map.get(\r\n    'milliSecond'\r\n  )}`\r\n  return new Date(date)\r\n}\r\n","import { dateParse } from './dateParse'\r\n\r\n/**\r\n * 解析字符串为 Date 对象\r\n * @deprecated 已弃用，请使用可读性更好的 {@link dateParse} 代替\r\n * @param {String} dateStr 日期字符串\r\n * @param {String} fmt 日期字符串的格式\r\n * 目前仅支持使用 y(年),M(月),d(日),h(时),m(分),s(秒),S(毫秒)\r\n * @returns {Date} 解析得到的 Date 对象\r\n */\r\nexport function strToDate (dateStr, fmt) {\r\n  return dateParse(dateStr, fmt)\r\n}\r\n","/**\r\n * 复制一段文本内容\r\n * @param {String} text 要进行复制的文本\r\n * @returns {Boolean} 是否复制成功\r\n */\r\nexport function copyText (text) {\r\n  const input = document.createElement('input')\r\n  document.body.appendChild(input)\r\n  input.setAttribute('value', text)\r\n  input.select()\r\n  const res = document.execCommand('copy')\r\n  document.body.removeChild(input)\r\n  return res\r\n}\r\n","/**\r\n * 根据 html 字符串创建 Element 元素\r\n * @param {String} str html 字符串\r\n * @returns {Element} 创建的 Element 元素\r\n */\r\nexport function createElByString (str) {\r\n  const root = document.createElement('div')\r\n  root.innerHTML = str\r\n  return root.querySelector('*')\r\n}\r\n","/**\r\n * 获取输入框中光标所在位置\r\n * @param  {HTMLFormElement} el 需要获取的输入框元素\r\n * @returns {Number} 光标所在位置的下标\r\n */\r\nexport function getCusorPostion (el) {\r\n  return el.selectionStart\r\n}\r\n","/**\r\n * 设置输入框中选中的文本/光标所在位置\r\n * @param {HTMLFormElement} el 需要设置的输入框元素\r\n * @param {Number} start 光标所在位置的下标\r\n * @param {Number} [end=start] 结束位置，默认为输入框结束\r\n */\r\nexport function setCusorPostion (el, start, end = start) {\r\n  el.focus()\r\n  el.setSelectionRange(start, end)\r\n}\r\n","import { getCusorPostion } from './getCusorPostion'\r\nimport { setCusorPostion } from './setCusorPostion'\r\n\r\n/**\r\n * 在指定位置后插入文本\r\n * @param {HTMLFormElement} el 需要设置的输入框元素\r\n * @param {String} text 要插入的值\r\n * @param {Number} [start] 开始位置，默认为当前光标处\r\n */\r\nexport function insertText (el, text, start = getCusorPostion(el)) {\r\n  const value = el.value\r\n  el.value = value.substr(0, start) + text + value.substr(start)\r\n  setCusorPostion(el, start + text.length)\r\n}\r\n","/**\r\n * 字符串安全的转换为小写\r\n * @param {String} str 字符串\r\n * @returns {String} 转换后得到的全小写字符串\r\n */\r\nexport function toLowerCase (str) {\r\n  if (!str || typeof str !== 'string') {\r\n    return str\r\n  }\r\n  return str.toLowerCase()\r\n}\r\n","import { toLowerCase } from '../string/toLowerCase'\r\n/**\r\n * 判断指定元素是否是可编辑元素\r\n * 注：可编辑元素并不一定能够进行编辑，例如只读的 input 元素\r\n * @param {Element} el 需要进行判断的元素\r\n * @returns {Boolean} 是否为可编辑元素\r\n */\r\nexport function isEditable (el) {\r\n  const inputEls = ['input', 'date', 'datetime', 'select', 'textarea']\r\n  return (\r\n    // 此处需要判断是否存在属性 isContentEditable\r\n    // @ts-ignore\r\n    el && (el.isContentEditable || inputEls.includes(toLowerCase(el.tagName)))\r\n  )\r\n}\r\n","let lastFocusEl\r\n\r\ndocument.addEventListener(\r\n  'focus',\r\n  event => {\r\n    lastFocusEl = event.target\r\n  },\r\n  true\r\n)\r\ndocument.addEventListener(\r\n  'blur',\r\n  () => {\r\n    lastFocusEl = null\r\n  },\r\n  true\r\n)\r\n/**\r\n * 获取到最后一个获得焦点的元素\r\n * @returns {Element} 最后一个获取到焦点的元素\r\n */\r\nexport function lastFocus () {\r\n  return lastFocusEl\r\n}\r\n","/**\r\n * 直接删除指定元素\r\n * @param {Element} el 需要删除的元素\r\n * @returns {Element} 返回被删除的元素\r\n */\r\nexport function removeEl (el) {\r\n  const parent = el.parentElement\r\n  return parent.removeChild(el)\r\n}\r\n","import { getCusorPostion } from './getCusorPostion'\r\nimport { setCusorPostion } from './setCusorPostion'\r\n\r\n/**\r\n * 在指定范围内删除文本\r\n * @param {HTMLFormElement} el 需要设置的输入框元素\r\n * @param {Number} [start] 开始位置，默认为当前选中开始位置\r\n * @param {Number} [end] 结束位置，默认为当前选中结束位置\r\n */\r\nexport function removeText (\r\n  el,\r\n  start = el.selectionStart,\r\n  end = el.selectionEnd\r\n) {\r\n  // 删除之前必须要 [记住] 当前光标的位置\r\n  const index = getCusorPostion(el)\r\n  const value = el.value\r\n  el.value = value.substr(0, start) + value.substr(end, value.length)\r\n  setCusorPostion(el, index)\r\n}\r\n","/**\r\n * 监听 event 的添加\r\n * 注：必须及早添加\r\n */\r\nexport function watchEventListener () {\r\n  /**\r\n   * 监听所有的 addEventListener, removeEventListener 事件\r\n   */\r\n  const documentAddEventListener = document.addEventListener\r\n  const eventTargetAddEventListener = EventTarget.prototype.addEventListener\r\n  const documentRemoveEventListener = document.removeEventListener\r\n  const eventTargetRemoveEventListener =\r\n    EventTarget.prototype.removeEventListener\r\n  const events = []\r\n\r\n  /**\r\n   * 用来保存监听到的事件信息\r\n   */\r\n  class Event {\r\n    constructor (el, type, listener, useCapture) {\r\n      this.el = el\r\n      this.type = type\r\n      this.listener = listener\r\n      this.useCapture = useCapture\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自定义的添加事件监听函数\r\n   * @param {String} type 事件类型\r\n   * @param {EventListener} listener 事件监听函数\r\n   * @param {Boolean} [useCapture=true] 是否需要捕获事件冒泡，默认为 false\r\n   */\r\n  function addEventListener (type, listener, useCapture = false) {\r\n    const _this = this\r\n    const $addEventListener =\r\n      _this === document\r\n        ? documentAddEventListener\r\n        : eventTargetAddEventListener\r\n    events.push(new Event(_this, type, listener, useCapture))\r\n    $addEventListener.apply(this, arguments)\r\n  }\r\n\r\n  /**\r\n   * 自定义的根据类型删除事件函数\r\n   * 该方法会删除这个类型下面全部的监听函数，不管数量\r\n   * @param {String} type 事件类型\r\n   */\r\n  // @ts-ignore\r\n  function removeEventListenerByType (type) {\r\n    const _this = this\r\n    const $removeEventListener =\r\n      _this === document\r\n        ? documentRemoveEventListener\r\n        : eventTargetRemoveEventListener\r\n    const removeIndexArr = events\r\n      .map((e, i) => (e.el === _this || e.type === arguments[0] ? i : -1))\r\n      .filter(i => i !== -1)\r\n    removeIndexArr.forEach(i => {\r\n      const e = events[i]\r\n      $removeEventListener.apply(e.el, [e.type, e.listener, e.useCapture])\r\n    })\r\n    removeIndexArr.sort((a, b) => b - a).forEach(i => events.splice(i, 1))\r\n  }\r\n\r\n  (function initWatchDOM () {\r\n    document.addEventListener = EventTarget.prototype.addEventListener = addEventListener\r\n    // 此处是为了新增函数 removeEventListenerByType\r\n    // @ts-ignore\r\n    document.removeEventListenerByType = EventTarget.prototype.removeEventListenerByType = removeEventListenerByType\r\n  })()\r\n}\r\n","/**\r\n * FormData 批量添加方法\r\n * 注：该方法不会覆盖掉原本的属性\r\n * @param {FormData} fd FormData 对象\r\n * @param {Object} obj 键值对对象\r\n * @returns {FormData} 添加完成后的 FormData 对象\r\n */\r\nexport function appends (fd, obj) {\r\n  for (const key in obj) {\r\n    fd.append(key, obj[key])\r\n  }\r\n  return fd\r\n}\r\n","/**\r\n * FormData 批量删除方法\r\n * @param {FormData} fd FormData 对象\r\n * @param {Array} keys  删除的 key 列表\r\n * @returns {FormData} 返回删除后的 FormData 对象\r\n */\r\nexport function deletes (fd, keys) {\r\n  keys.forEach(key => fd.delete(key))\r\n  return fd\r\n}\r\n","/**\r\n * FormData 批量设置方法\r\n * 注：该方法会覆盖掉原本的属性\r\n * @param {FormData} fd 表单对象\r\n * @param {Object} obj 键值对对象\r\n * @returns {FormData} 设置完成后的 FormData 对象\r\n */\r\nexport function sets (fd, obj) {\r\n  for (const k in obj) {\r\n    fd.set(k, obj[k])\r\n  }\r\n  return fd\r\n}\r\n","import { asIterator } from './../array/asIterator'\r\n\r\n/**\r\n * FormData 转换为包含所有键值数组的二维数组函数\r\n *\r\n * @param {FormData} fd 需要转换的 FormData 对象\r\n * @returns {Array} 转换后的数组\r\n * @deprecated 已被原生函数 Array.from 取代\r\n */\r\nexport function formDataToArray (fd) {\r\n  // @ts-ignore\r\n  return asIterator(fd.entries())\r\n}\r\n","/**\r\n * 将参数对象转换为 FormData，只转换一层\r\n * @param data 参数对象\r\n * @return {FormData} 转换后的表单对象\r\n */\r\nexport function objToFormData (data) {\r\n  const fd = new FormData()\r\n  if (data) {\r\n    for (const k in data) {\r\n      if (data.hasOwnProperty(k)) {\r\n        const v = data[k]\r\n        fd.append(k, v)\r\n      }\r\n    }\r\n  }\r\n  return fd\r\n}\r\n","/**\r\n * 函数去抖\r\n * 去抖 (debounce) 去抖就是对于一定时间段的连续的函数调用，只让其执行一次\r\n * 注: 包装后的函数如果两次操作间隔小于 delay 则不会被执行, 如果一直在操作就会一直不执行, 直到操作停止的时间大于 delay 最小间隔时间才会执行一次, 不管任何时间调用都需要停止操作等待最小延迟时间\r\n * 应用场景主要在那些连续的操作, 例如页面滚动监听, 包装后的函数只会执行最后一次\r\n * 注: 该函数第一次调用一定不会执行，第一次一定拿不到缓存值，后面的连续调用都会拿到上一次的缓存值。如果需要在第一次调用获取到的缓存值，则需要传入第三个参数 {@link init}，默认为 {@link undefined} 的可选参数\r\n * @param {Number} delay 最小延迟时间，单位为 ms\r\n * @param {Function} action 真正需要执行的操作\r\n * @param {Object} [init=undefined] 初始的缓存值，不填默认为 {@link undefined}\r\n * @return {Function} 包装后有去抖功能的函数。该函数是异步的，与需要包装的函数 {@link action} 是否异步没有太大关联\r\n */\r\nexport const debounce = (delay, action, init = undefined) => {\r\n  let flag\r\n  let result = init\r\n  return function (...args) {\r\n    return new Promise(resolve => {\r\n      if (flag) clearTimeout(flag)\r\n      flag = setTimeout(() => {\r\n        result = action.call(this, ...args)\r\n        resolve(result)\r\n      }, delay)\r\n      setTimeout(() => {\r\n        resolve(result)\r\n      }, delay)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * 返回参数本身的函数\r\n * @param {Object} obj 任何对象\r\n * @returns {Object} 传入的参数\r\n */\r\nexport function returnItself (obj) {\r\n  return obj\r\n}\r\n","/**\r\n * 安全执行某个函数\r\n * @param {Function} fn 需要执行的函数\r\n * @param {Object} [defaultVal=undefined] 发生异常后的默认返回值，默认为 undefined\r\n * @param {...Object} [args] 可选的函数参数\r\n * @returns {Object|undefined} 函数执行的结果，或者其默认值\r\n */\r\nexport const safeExec = (fn, defaultVal = undefined, ...args) => {\r\n  try {\r\n    return fn(...args)\r\n  } catch (err) {\r\n    return defaultVal\r\n  }\r\n}\r\n","/**\r\n * 通用的单例模式\r\n * @param {Object} clazz 需要包装为单例的类型\r\n * @returns {Object} 包装后的单例模式类，使用 {@code new} 创建将只在第一次有效\r\n */\r\nexport function singleModel (clazz) {\r\n  let instance\r\n  return class SingleClass extends clazz {\r\n    /**\r\n     * @param {...Object} args\r\n     */\r\n    constructor (...args) {\r\n      if (instance) {\r\n        return instance\r\n      }\r\n      super(...args)\r\n      instance = this\r\n    }\r\n  }\r\n}\r\n","import { singleModel } from './singleModel'\r\n\r\n/**\r\n * 状态机\r\n * 用于避免使用 if-else 的一种方式\r\n */\r\nexport class StateMachine {\r\n  /**\r\n   * 获取到一个状态工厂\r\n   */\r\n  static getFactory () {\r\n    const classMap = new Map()\r\n    /**\r\n     * 状态注册器\r\n     * 更好的有限状态机，分离子类与构建的关系，无论子类如何增删该都不影响基类及工厂类\r\n     */\r\n    return new class Builder {\r\n      /**\r\n       * 注册一个 class，创建子类时调用，用于记录每一个 [状态 => 子类] 对应\r\n       * @param {Number|String} state 作为键的状态\r\n       * @param {Object} clazz 对应的子类型\r\n       * @returns {Object} 返回 clazz 本身\r\n       */\r\n      register (state, clazz) {\r\n        classMap.set(state, singleModel(clazz))\r\n        return clazz\r\n      }\r\n\r\n      // noinspection JSMethodCanBeStatic\r\n      /**\r\n       * 获取一个标签子类对象\r\n       * @param {Number|String} state 状态索引\r\n       * @returns {Object} 子类对象\r\n       */\r\n      getInstance (state) {\r\n        const Class = classMap.get(state)\r\n        if (!Class) {\r\n          return null\r\n        }\r\n        // 构造函数的参数\r\n        return new Class(...Array.from(arguments).slice(1))\r\n      }\r\n    }()\r\n  }\r\n}\r\n","/**\r\n * 函数节流\r\n * 节流 (throttle) 让一个函数不要执行的太频繁，减少执行过快的调用，叫节流\r\n * 类似于上面而又不同于上面的函数去抖, 包装后函数在上一次操作执行过去了最小间隔时间后会直接执行, 否则会忽略该次操作\r\n * 与上面函数去抖的明显区别在连续操作时会按照最小间隔时间循环执行操作, 而非仅执行最后一次操作\r\n * 注: 该函数第一次调用一定会执行，不需要担心第一次拿不到缓存值，后面的连续调用都会拿到上一次的缓存值\r\n *\r\n * @param {Number} delay 最小间隔时间，单位为 ms\r\n * @param {Function} action 真正需要执行的操作\r\n * @return {Function} 包装后有节流功能的函数。该函数是异步的，与需要包装的函数 {@link action} 是否异步没有太大关联\r\n */\r\nexport const throttle = (delay, action) => {\r\n  let last = 0\r\n  let result\r\n  return function (...args) {\r\n    return new Promise(resolve => {\r\n      const curr = Date.now()\r\n      if (curr - last > delay) {\r\n        result = action.call(this, ...args)\r\n        last = curr\r\n        resolve(result)\r\n        return\r\n      }\r\n      resolve(result)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * 测试函数的执行时间\r\n * 注：如果函数返回 Promise，则该函数也会返回 Promise，否则直接返回执行时间\r\n * @param {Function} fn 需要测试的函数\r\n * @returns {Number|Promise} 执行的毫秒数\r\n */\r\nexport const timing = fn => {\r\n  // 使用 Proxy 实现了一下，但感觉实际上与原来的差不多（或许是吾辈的使用场景不太对？）\r\n  const proxyFn = new Proxy(fn, {\r\n    apply (target, thisArg, args) {\r\n      const begin = performance.now()\r\n      const result = Reflect.apply(target, thisArg, args)\r\n      if (!(result instanceof Promise)) {\r\n        return performance.now() - begin\r\n      }\r\n      return result.then(() => performance.now() - begin)\r\n    },\r\n  })\r\n  return proxyFn()\r\n  // const begin = performance.now()\r\n  // const result = fn()\r\n  // if (!(result instanceof Promise)) {\r\n  //   return performance.now() - begin\r\n  // }\r\n  // return result.then(() => performance.now() - begin)\r\n}\r\n","/**\r\n * 轮询等待指定资源加载完毕再执行操作\r\n * 使用 Promises 实现，可以使用 ES7 的 {@async}/{@await} 调用\r\n * @param {Function} fn 判断必须的资源是否存在的方法\r\n * @param {Object} option 可配置项\r\n * @param {Number} [option.interval=100] 轮询间隔\r\n * @param {Number} [option.max=10] 最大轮询次数\r\n * @returns Promise 对象\r\n */\r\nexport const waitResource = (fn, { interval = 100, max = 10 } = {}) => {\r\n  let current = 0\r\n  return new Promise((resolve, reject) => {\r\n    const timer = setInterval(() => {\r\n      if (fn()) {\r\n        clearInterval(timer)\r\n        resolve()\r\n      }\r\n      current++\r\n      if (current >= max) {\r\n        clearInterval(timer)\r\n        reject(new Error('等待超时'))\r\n      }\r\n    }, interval)\r\n  })\r\n}\r\n","import { safeExec } from './safeExec'\r\n\r\n/**\r\n * 监视指定函数返回值的变化\r\n * @param {Function} fn 需要监视的函数\r\n * @param {Function} callback 回调函数\r\n * @param {Number} [interval=100] 每次检查的间隔时间，默认为 100ms\r\n * @returns {Function} 关闭这个监视函数\r\n */\r\nexport const watch = (fn, callback, interval = 100) => {\r\n  let oldVal = safeExec(fn)\r\n  const timer = setInterval(() => {\r\n    const newVal = safeExec(fn)\r\n    if (oldVal !== newVal) {\r\n      callback(newVal, oldVal)\r\n      oldVal = newVal\r\n    }\r\n  }, interval)\r\n  return () => clearInterval(timer)\r\n}\r\n","/**\r\n * 定义监听对象时的回调函数 doc\r\n * @callback WatchObjectCallback\r\n * @param {Object} target 代理的对象变化后的值\r\n * @param {String} k 变化的属性名\r\n * @param {Object} v 变化的属性值\r\n */\r\n\r\n/**\r\n * 深度监听指定对象属性的变化\r\n * 注：指定对象不能是原始类型，即不可变类型，而且对象本身的引用不能改变，最好使用 const 进行声明\r\n * @param {Object} object 需要监视的对象\r\n * @param {WatchObjectCallback} callback 当代理对象发生改变时的回调函数，回调函数有三个参数，分别是\r\n * @returns {Object} 返回源对象的一个代理\r\n */\r\nexport function watchObject (object, callback) {\r\n  const handler = {\r\n    get (target, property, receiver) {\r\n      try {\r\n        return new Proxy(target[property], handler)\r\n      } catch (err) {\r\n        return Reflect.get(target, property, receiver)\r\n      }\r\n    },\r\n    set (target, key, value, receiver) {\r\n      callback(target, key, value)\r\n      return Reflect.set(target, key, value, receiver)\r\n    },\r\n  }\r\n  return new Proxy(object, handler)\r\n}\r\n","/**\r\n * 字符串格式化\r\n *\r\n * @param {String} str 要进行格式化的值\r\n * @param {Object} args 格式化参数值，替换字符串中的 {} 的值\r\n * @returns {String} 替换完成的字符串\r\n * @deprecated 已废弃，请使用 ES6 模板字符串 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings\r\n */\r\nexport function format (str, args) {\r\n  if (!args) {\r\n    return str\r\n  }\r\n  return Object.keys(args).reduce(\r\n    (res, k) => res.replace(new RegExp(`{${k}}`, 'g'), args[k]),\r\n    str\r\n  )\r\n}\r\n","/**\r\n * 判断是否为小数的正则表达式\r\n */\r\nconst regexp = new RegExp('^(-?\\\\d+)(.\\\\d+)?$')\r\n/**\r\n * 判断字符串是否位小数\r\n * @param {String} str 需要进行判断的字符串\r\n * @returns {Boolean} 是否为小数\r\n */\r\nexport function isFloat (str) {\r\n  return regexp.test(str)\r\n}\r\n","/**\r\n * 判断是否为整数的正则表达式\r\n */\r\nconst regexp = new RegExp('^-?\\\\d+$')\r\n/**\r\n * 判断字符串是否位整数\r\n * @param {String} str 需要进行判断的字符串\r\n * @returns {Boolean} 是否为小数\r\n */\r\nexport function isNumber (str) {\r\n  return regexp.test(str)\r\n}\r\n","/**\r\n * 字符串安全的转换为大写\r\n * @param {String} str 字符串\r\n * @returns {String} 转换后得到的全大写字符串\r\n */\r\nexport function toUpperCase (str) {\r\n  if (!str || typeof str !== 'string') {\r\n    return str\r\n  }\r\n  return str.toUpperCase()\r\n}\r\n","/**\r\n * 将空白字符串转换为 null\r\n *\r\n * @param {String} str 将空字符串转换为 {@code null}\r\n * @returns {String} 可能为 {@code null}\r\n */\r\nexport function blankToNull (str) {\r\n  return !str || str.trim().length === 0 ? null : str\r\n}\r\n","import { blankToNull } from './../string/blankToNull'\r\n\r\n/**\r\n * 置空对象所有空白的属性\r\n *\r\n * @param {Object} obj 对象\r\n * @returns {Object} 将所有的空白属性全部转换为 null 的新对象\r\n */\r\nexport function blankToNullField (obj) {\r\n  const res = {}\r\n  for (const k in obj) {\r\n    const v = obj[k]\r\n    res[k] = typeof v === 'string' ? blankToNull(v) : v\r\n  }\r\n  return res\r\n}\r\n","/**\r\n * 将对象的所有属性置空\r\n * @param {Object} obj 需要置空属性的对象\r\n * @returns {Object} 返回一个新的对象\r\n */\r\nexport function emptyAllField (obj) {\r\n  const res = {}\r\n  for (const k in obj) {\r\n    res[k] = null\r\n  }\r\n  return res\r\n}\r\n","/**\r\n * 排除对象中的指定字段\r\n * 注: 此处将获得一个浅拷贝对象\r\n * @param {Object} object 排除对象\r\n * @param {...String} fields 要排除的字段\r\n * @returns {Object} 排除完指定字段得到的新的对象\r\n */\r\nexport function excludeFields (object, ...fields) {\r\n  const set = new Set(fields)\r\n  return Object.entries(object).reduce((res, [k, v]) => {\r\n    if (!set.has(k)) {\r\n      res[k] = v\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n","/**\r\n * 将 map 转换为 Object 对象\r\n * @param {Map} map map 键值表\r\n * @returns {Object} 转换得到的 Object 对象\r\n */\r\nexport function mapToObject (map) {\r\n  const res = {}\r\n  // @ts-ignore\r\n  for (let [k, v] of map) {\r\n    res[k] = v\r\n  }\r\n  return res\r\n}\r\n","/**\r\n * 生成一个随机的数字\r\n * 如果没有参数，则会抛出异常\r\n * @param {Number} args 参数列表，如果只有一个参数，则认为是最大值，最小值为 0。否则认为第一个是最小值，第二个是最大值，忽略剩余的参数\r\n * @returns {Number} 生成的随机整数\r\n */\r\nexport function randomInt (...args) {\r\n  let min\r\n  let max\r\n  if (args.length === 0) {\r\n    throw new Error('非法参数，必须指定最大值')\r\n  } else if (args.length === 1) {\r\n    min = 0\r\n    max = args[0]\r\n  } else if (args.length > 1) {\r\n    min = args[0]\r\n    max = args[1]\r\n  }\r\n  return min + Math.floor(Math.random() * (max - min))\r\n}\r\n","/**\r\n * 获取一年内的第多少星期\r\n * @deprecated 不推荐使用，请使用 {@link dateEnhance} 代替\r\n * @returns {Number}\r\n */\r\nexport function getYearWeek (date) {\r\n  /*\r\n    date1是当前日期\r\n    date2是当年第一天\r\n    d是当前日期是今年第多少天\r\n    用d + 当前年的第一天的周差距的和在除以7就是本年第几周\r\n    */\r\n  const nowTime = date.getTime()\r\n  const startTime = new Date(date.getFullYear(), 0, 1).getTime()\r\n  const difTime = nowTime - startTime\r\n  return Math.floor(difTime / (24 * 3600 * 1000) / 7)\r\n}\r\n","import { dateFormat } from './dateFormat'\r\n\r\n/**\r\n * 日期固定时间点\r\n * @class DateConstants\r\n */\r\nexport class DateConstants {\r\n  /**\r\n   * 获取指定日期一天的开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的开始时间\r\n   */\r\n  dayStart (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期一天的结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的结束时间\r\n   */\r\n  dayEnd (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T23:59:59.999`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的新年开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 新年开始时间\r\n   */\r\n  yearStart (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-01-01T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的旧年结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 旧年结束时间\r\n   */\r\n  yearEnd (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-12-31T23:59:59.999`)\r\n  }\r\n}\r\n\r\n/**\r\n * 导出一个日期固定时间点的对象\r\n * @type {DateConstants}\r\n */\r\nexport const dateConstants = new DateConstants()\r\n","/**\r\n * 判断数字是否在指定区间之中\r\n * @param {Number} num 指定数字\r\n * @param {Number} min 最小值\r\n * @param {Number} max 最大值（不包含）\r\n */\r\nexport function isRange(num, min, max) {\r\n  if (min > max) {\r\n    [min, max] = [max, min]\r\n  }\r\n  return num >= min && num < max\r\n}\r\n","import { dateFormat } from './dateFormat'\r\n\r\n/**\r\n * 日期固定时间点\r\n * @class DateConstants\r\n */\r\nexport class DateConstants {\r\n  /**\r\n   * 获取指定日期一天的开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的开始时间\r\n   */\r\n  dayStart (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期一天的结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 一天的结束时间\r\n   */\r\n  dayEnd (date = new Date()) {\r\n    return new Date(`${dateFormat(date, 'yyyy-MM-dd')}T23:59:59.999`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的新年开始时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 新年开始时间\r\n   */\r\n  yearStart (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-01-01T00:00:00.000`)\r\n  }\r\n  /**\r\n   * 获取指定日期所在年份的旧年结束时间\r\n   * @param {Date} [date=new Date()] 指定的时间，默认为当前日期\r\n   * @returns {Date} 旧年结束时间\r\n   */\r\n  yearEnd (date = new Date()) {\r\n    return new Date(`${date.getFullYear()}-12-31T23:59:59.999`)\r\n  }\r\n}\r\n\r\n/**\r\n * 导出一个日期固定时间点的对象\r\n * @type {DateConstants}\r\n */\r\nexport const dateConstants = new DateConstants()\r\n","import { isRange } from '../number/isRange'\r\nimport { dateConstants } from './DateConstants'\r\n\r\n/**\r\n * 一天标准的毫秒数\r\n */\r\nconst DAY_UNIT_TIME = 1000 * 60 * 60 * 24\r\n/**\r\n * 日期增强\r\n */\r\nexport class DateEnhance {\r\n  /**\r\n   * 构造函数\r\n   * @param {Date} date 要增强的日期\r\n   */\r\n  constructor (date) {\r\n    /**\r\n     * @field 要增强的日期\r\n     */\r\n    this.date = date\r\n  }\r\n  /**\r\n   * 获取到年份\r\n   * @returns {Number}\r\n   */\r\n  year () {\r\n    return this.date.getFullYear()\r\n  }\r\n  /**\r\n   * 获取月份\r\n   * @returns {Number}\r\n   * @deprecated 已废弃，请使用 {@link this#monthOfYear} 函数\r\n   */\r\n  month () {\r\n    return this.date.getMonth()\r\n  }\r\n  /**\r\n   * 获取今年的第几个月份\r\n   * 和 {@link this#month} 不同的是不再从 0 计算月份\r\n   */\r\n  monthOfYear () {\r\n    return this.date.getMonth() + 1\r\n  }\r\n  /**\r\n   * 获取一年内的第多少天\r\n   * 注: 这个天数指定的在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\r\n   * @returns {Number}\r\n   */\r\n  dayOfYear () {\r\n    return Math.ceil(\r\n      (this.date.getTime() - dateConstants.yearStart(this.date).getTime()) /\r\n        DAY_UNIT_TIME\r\n    )\r\n  }\r\n  /**\r\n   * 获取一个月内的第多少天\r\n   * 注: 这个天数指的是在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\r\n   * @returns {Number}\r\n   */\r\n  dayOfMonth () {\r\n    return this.date.getDate()\r\n  }\r\n  /**\r\n   * 获取一个星期内的第多少天\r\n   * @returns {Number}\r\n   */\r\n  dayOfWeek () {\r\n    return this.date.getDay()\r\n  }\r\n  /**\r\n   * 获取一年内的第多少星期\r\n   * 注: 这个星期指定的在第几天而非过去了多少天，例如 2018-01-10 的结果会是 10\r\n   * @returns {Number}\r\n   */\r\n  weekOfYear () {\r\n    return Math.ceil(this.dayOfYear() / 7)\r\n  }\r\n  /**\r\n   * 获取一个月内的第多少星期\r\n   * @returns {Number}\r\n   */\r\n  weekOfMonth () {\r\n    return Math.ceil(this.dayOfMonth() / 7)\r\n  }\r\n  /**\r\n   * 获取季度\r\n   * @returns {Number}\r\n   */\r\n  quarter () {\r\n    const month = this.month()\r\n    if (isRange(month, 0, 3)) {\r\n      return 1\r\n    } else if (isRange(month, 3, 6)) {\r\n      return 2\r\n    } else if (isRange(month, 6, 9)) {\r\n      return 3\r\n    } else {\r\n      return 4\r\n    }\r\n  }\r\n  /**\r\n   * 获取小时\r\n   * @returns {Number}\r\n   */\r\n  hour () {\r\n    return this.date.getHours()\r\n  }\r\n  /**\r\n   * 获取分钟\r\n   * @returns {Number}\r\n   */\r\n  minute () {\r\n    return this.date.getMinutes()\r\n  }\r\n  /**\r\n   * 获取秒\r\n   * @returns {Number}\r\n   */\r\n  second () {\r\n    return this.date.getSeconds()\r\n  }\r\n  /**\r\n   * 获取毫秒\r\n   * @returns {Number}\r\n   */\r\n  milliSecond () {\r\n    return this.date.getMilliseconds()\r\n  }\r\n}\r\n\r\n/**\r\n * 获取一个增强的日期\r\n * @param {Date} date 要增强的日期\r\n * @returns {DateEnhance} 增强日期\r\n */\r\nexport function dateEnhance (date) {\r\n  return new DateEnhance(date)\r\n}\r\n","/**\r\n * 时间日期间隔\r\n * @class DateBetween\r\n */\r\nexport class DateBetween {\r\n  /**\r\n   * 构造函数\r\n   * @param {Date} start 开始时间\r\n   * @param {Date} end 结束时间\r\n   */\r\n  constructor (start, end) {\r\n    /**\r\n     * @field start 开始时间\r\n     */\r\n    this.start = start\r\n    /**\r\n     * @field end 结束时间\r\n     */\r\n    this.end = end\r\n  }\r\n  /**\r\n   * 获取毫秒差值\r\n   * @returns {Number} 毫秒差值\r\n   */\r\n  milliSecond () {\r\n    return this.end.getTime() - this.start.getTime()\r\n  }\r\n  /**\r\n   * 获取秒差值\r\n   * @returns {Number} 秒差值\r\n   */\r\n  second () {\r\n    return Math.floor(this.milliSecond() / 1000)\r\n  }\r\n  /**\r\n   * 获取分钟差值\r\n   * @returns {Number} 分钟差值\r\n   */\r\n  minute () {\r\n    return Math.floor(this.second() / 60)\r\n  }\r\n  /**\r\n   * 获取小时差值\r\n   * @returns {Number} 小时差值\r\n   */\r\n  hour () {\r\n    return Math.floor(this.minute() / 60)\r\n  }\r\n  /**\r\n   * 获取天数差值\r\n   * @returns {Number} 天数差值\r\n   */\r\n  day () {\r\n    return Math.floor(this.hour() / 24)\r\n  }\r\n  /**\r\n   * 获取月份差值\r\n   * 注: 此处获取的差值是按月计算的，即 2018-12-31 => 2019-01-01 也被认为相差一个月\r\n   * @returns {Number} 月份差值\r\n   */\r\n  month () {\r\n    const year = this.year()\r\n    const month = this.end.getMonth() - this.start.getMonth()\r\n    return year * 12 + month\r\n  }\r\n  /**\r\n   * 获取年份差值\r\n   * 注: 此处获取的差值是按年计算的，即 2018-12-31 => 2019-01-01 也被认为相差一年\r\n   * @returns {Number} 年份差值\r\n   */\r\n  year () {\r\n    return this.end.getFullYear() - this.start.getFullYear()\r\n  }\r\n}\r\n\r\n/**\r\n * 获取两个时间的差值\r\n * @param {Date} start 开始时间\r\n * @param {Date} end 结束时间\r\n * @returns {DateBetween} 差值对象\r\n */\r\nexport function dateBetween (start, end) {\r\n  return new DateBetween(start, end)\r\n}\r\n","/**\r\n * 将指定函数包装为只调用一次\r\n * @param {Function} fn 需要包装的函数\r\n * @returns {Function} 包装后的函数\r\n */\r\nexport const onec = fn => {\r\n  let flag = true\r\n  let res\r\n  return function (...args) {\r\n    if (flag === false) {\r\n      return res\r\n    }\r\n    flag = false\r\n    return (res = fn.call(this, ...args))\r\n  }\r\n}\r\n","/**\r\n * 包装一个函数为指定参数只执行一次的函数\r\n * @param {Function} fn 需要包装的函数\r\n * @param {Function} paramConverter 参数转换的函数，参数为需要包装函数的参数\r\n * @returns {Function} 需要被包装的函数\r\n */\r\nexport const onecOfSameParam = (\r\n  fn,\r\n  paramConverter = (...args) => JSON.stringify(args)\r\n) => {\r\n  const paramMap = new Map()\r\n  return function (...args) {\r\n    const key = paramConverter(...args)\r\n    const old = paramMap.get(key)\r\n    if (old !== undefined) {\r\n      return old\r\n    }\r\n    const res = fn.call(this, ...args)\r\n    if (res instanceof Promise) {\r\n      return res.then(res => {\r\n        paramMap.set(key, res)\r\n        return res\r\n      })\r\n    }\r\n    paramMap.set(key, res)\r\n    return res\r\n  }\r\n}\r\n","/**\r\n * 返回合理参数本身的函数\r\n * 1. 如果没有参数则返回 undefined\r\n * 2. 如果只有一个参数则返回参数本身\r\n * 3. 如果有两个以上的参数则返回参数列表\r\n * @param {...Object} args 任何对象\r\n * @returns {undefined|Object|Array.<Object>} 传入的参数\r\n */\r\nexport function returnReasonableItself (...args) {\r\n  const len = args.length\r\n  if (len === 0) {\r\n    return\r\n  }\r\n  if (len === 1) {\r\n    return args[0]\r\n  }\r\n  return args\r\n}\r\n","import { returnItself } from './../function/returnItself'\r\n\r\n/**\r\n * 从数组中移除指定的元素\r\n * 注: 时间复杂度为 1~3On\r\n * @param {Array} arr 需要被过滤的数组\r\n * @param {Array} deleteItems 要过滤的元素数组\r\n * @param {Function} [kFn=returnItself] 每个元素的唯一键函数\r\n */\r\nexport function filterItems (arr, deleteItems, kFn = returnItself) {\r\n  // @ts-ignore\r\n  const kSet = new Set(deleteItems.map(kFn))\r\n  return arr.filter(v => !kSet.has(kFn(v)))\r\n}\r\n","import { returnItself } from '../function/returnItself'\r\n\r\n/**\r\n * 数组之间的差异结果类\r\n * @class ArrayDiff\r\n */\r\nexport class ArrayDiff {\r\n  /**\r\n   * 构造函数\r\n   * @param {Array} left 第一个数组独有的元素列表\r\n   * @param {Array} right 第二个数组独有的元素列表\r\n   * @param {Array} common 两个数组共有的元素列表\r\n   */\r\n  constructor (left, right, common) {\r\n    /**\r\n     * @field 第一个数组独有的元素列表\r\n     */\r\n    this.left = left\r\n    /**\r\n     * @field 第二个数组独有的元素列表\r\n     */\r\n    this.right = right\r\n    /**\r\n     * @field 两个数组共有的元素列表\r\n     */\r\n    this.common = common\r\n  }\r\n}\r\n\r\n/**\r\n * 比较两个数组的差异\r\n * @param {Array} thanArr 第一个数组\r\n * @param {Array} thatArr 第二个数组\r\n * @param {Function} [kFn=returnItself] 每个元素的唯一键函数\r\n * @returns {ArrayDiff} 比较的差异结果\r\n */\r\nexport function arrayDiffBy (thanArr, thatArr, kFn = returnItself) {\r\n  // @ts-ignore\r\n  const kThanSet = new Set(thanArr.map(kFn))\r\n  // @ts-ignore\r\n  const kThatSet = new Set(thatArr.map(kFn))\r\n  const left = thanArr.filter(v => !kThatSet.has(kFn(v)))\r\n  const right = thatArr.filter(v => !kThanSet.has(kFn(v)))\r\n  // @ts-ignore\r\n  const kLeftSet = new Set(left.map(kFn))\r\n  const common = thanArr.filter(v => !kLeftSet.has(kFn(v)))\r\n  return new ArrayDiff(left, right, common)\r\n}\r\n","import { onec } from './../function/onec'\r\n/**\r\n * 使用 Generator 实现一个从 0 开始的自增序列\r\n */\r\nfunction * autoIncrementGenerator () {\r\n  for (let i = 0; ; i++) {\r\n    /**\r\n     * @returns {Number} 每次获取都返回循环中的当前迭代变量，然后暂停于此处\r\n     */\r\n    yield i\r\n  }\r\n}\r\n/**\r\n * 包装 {@link autoIncrementGenerator} 为只能调用一次的函数\r\n */\r\nconst generator = onec(autoIncrementGenerator)\r\n\r\n/**\r\n * 获取自增长序列的最新值\r\n * @returns {Number} 最新值\r\n */\r\nexport function autoIncrement () {\r\n  return generator().next().value\r\n}\r\n","import { onecOfSameParam } from '../function/onecOfSameParam'\r\n\r\n/**\r\n * 转换基类\r\n */\r\nexport class IConverter {\r\n  /**\r\n   * 将字符串解析为字符串列表\r\n   *\r\n   * @param {String} str 字符串\r\n   * @return {Array.<String>} 字符串列表\r\n   * @abstract\r\n   */\r\n  from (str) {\r\n    throw new Error('子类必须重写 from 函数')\r\n  }\r\n\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @abstract\r\n   */\r\n  to (list) {\r\n    throw new Error('子类必须重写 to 函数')\r\n  }\r\n}\r\n\r\n/**\r\n * 驼峰风格解析\r\n */\r\nexport class CamelOrPascalFrom extends IConverter {\r\n  /**\r\n   * 将字符串解析为字符串列表\r\n   *\r\n   * @param {String} str 字符串\r\n   * @return {Array.<String>} 字符串列表\r\n   * @override\r\n   */\r\n  from (str) {\r\n    const result = []\r\n    let len = str.length\r\n    let old = 0\r\n    for (let i = 0; i < len; i++) {\r\n      const c = str.charAt(i)\r\n      if (c >= 'A' && c <= 'Z') {\r\n        if (i !== 0) {\r\n          result.push(str.substring(old, i))\r\n        }\r\n        old = i\r\n      }\r\n    }\r\n    if (old !== str.length) {\r\n      result.push(str.substring(old, str.length))\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n/**\r\n * 小写开头的驼峰转换器\r\n *\r\n */\r\nexport class CamelConverter extends CamelOrPascalFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    const str = list\r\n      .map(s => s.substring(0, 1).toUpperCase() + s.substring(1))\r\n      .join()\r\n    return str.substring(0, 1).toLowerCase() + str.substring(1)\r\n  }\r\n}\r\n\r\n/**\r\n * 大写开头的驼峰转换器\r\n */\r\nexport class PascalConverter extends CamelOrPascalFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    return list\r\n      .map(s => s.substring(0, 1).toUpperCase() + s.substring(1))\r\n      .join()\r\n  }\r\n}\r\n/**\r\n * 下划线风格解析\r\n */\r\nexport class SnakeOrScreamingSnakeFrom extends IConverter {\r\n  /**\r\n   * 将字符串解析为字符串列表\r\n   *\r\n   * @param {String} str 字符串\r\n   * @return {Array.<String>} 字符串列表\r\n   * @override\r\n   */\r\n  from (str) {\r\n    return str.split('_')\r\n  }\r\n}\r\n/**\r\n * 小写下划线的转换器\r\n */\r\nexport class SnakeConverter extends SnakeOrScreamingSnakeFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    return list.map(s => s.toLowerCase()).join('_')\r\n  }\r\n}\r\n/**\r\n * 大写下划线的转换器\r\n */\r\nexport class ScreamingSnakeConverter extends SnakeOrScreamingSnakeFrom {\r\n  /**\r\n   * 将字符串列表构造为字符串\r\n   *\r\n   * @param {Array.<String>} list 字符串列表\r\n   * @return {String} 字符串\r\n   * @override\r\n   */\r\n  to (list) {\r\n    return list.map(s => s.toUpperCase()).join('_')\r\n  }\r\n}\r\n/**\r\n * @enum {Symbol} 字符串风格常量对象\r\n */\r\nexport const stringStyleType = {\r\n  /**\r\n   * 小写驼峰\r\n   */\r\n  Camel: Symbol(1),\r\n  /**\r\n   * 大写驼峰\r\n   */\r\n  Pascal: Symbol(2),\r\n  /**\r\n   * 小写下划线\r\n   */\r\n  Snake: Symbol(3),\r\n  /**\r\n   * 大写下划线\r\n   */\r\n  ScreamingSnake: Symbol(4),\r\n}\r\n\r\n/**\r\n * 转换器工厂\r\n */\r\nclass ConverterFactory {\r\n  /**\r\n   * 获取一个转换器实例\r\n   *\r\n   * @param {Symbol} styleType 转换风格，使用了 {@link stringStyleType} 定义的常量对象\r\n   * @return {IConverter} 转换器对象\r\n   * @throws 如果获取未定义过的转换器，则会抛出异常\r\n   */\r\n  static getInstance (styleType) {\r\n    switch (styleType) {\r\n      case stringStyleType.Camel:\r\n        return new CamelConverter()\r\n      case stringStyleType.Pascal:\r\n        return new PascalConverter()\r\n      case stringStyleType.Snake:\r\n        return new SnakeConverter()\r\n      case stringStyleType.ScreamingSnake:\r\n        return new ScreamingSnakeConverter()\r\n      default:\r\n        throw new Error('No corresponding converter found')\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 字符串风格转换器\r\n * 请不要直接使用构造函数创建，而是用 {@link StringStyleUtil.getConverter} 来获得一个转换器\r\n * @private\r\n */\r\nexport class StringStyleConverter {\r\n  /**\r\n   * 构造一个字符串任意风格转换器\r\n   * @param {Symbol} from 转换字符串的风格\r\n   * @param {Symbol} to 需要转换的风格\r\n   * @private\r\n   */\r\n  constructor (from, to) {\r\n    /**\r\n     * @field 解析字符串风格的转换器\r\n     * @type {IConverter}\r\n     * @private\r\n     */\r\n    this.fromConverter = ConverterFactory.getInstance(from)\r\n    /**\r\n     * @field 构造字符串风格的转换器\r\n     * @type {IConverter}\r\n     * @private\r\n     */\r\n    this.toConverter = ConverterFactory.getInstance(to)\r\n  }\r\n\r\n  /**\r\n   * 转换字符串的风格\r\n   *\r\n   * @param {String} str 要转换的字符串\r\n   * @return {String} 转换得到的字符串\r\n   */\r\n  convert (str) {\r\n    if (str === undefined || str === null || str.length === 0) {\r\n      return str\r\n    }\r\n    return this.toConverter.to(this.fromConverter.from(str))\r\n  }\r\n}\r\n\r\n/**\r\n * 包装获取字符串风格转换器\r\n * 此处采用了单例模式，每种转换器只会有一个\r\n *\r\n * @param {stringStyleType} from 解析风格\r\n * @param {stringStyleType} to 转换风格\r\n * @return {StringStyleConverter} 转换器的实例\r\n */\r\nconst _getConverter = onecOfSameParam(\r\n  /**\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @return {StringStyleConverter} 转换器的实例\r\n   */\r\n  (from, to) => new StringStyleConverter(from, to),\r\n  /**\r\n   * 根据参数生成唯一标识\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @return {String} 唯一参数标识字符串\r\n   */\r\n  (from, to) => from.toString() + to.toString()\r\n)\r\n\r\n/**\r\n * 字符串风格转换工具类\r\n */\r\nexport class StringStyleUtil {\r\n  /**\r\n   * 获取一个转换器的实例\r\n   * 该函数获取的转换器可以任意复用，请优先使用函数\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @return {StringStyleConverter} 转换器的实例\r\n   */\r\n  static getConverter (from, to) {\r\n    return _getConverter(from, to)\r\n  }\r\n  /**\r\n   * 直接转换字符串的风格\r\n   * 请优先使用可以复用的 {@link StringStyleUtil.getConverter} 函数\r\n   * @param {stringStyleType} from 解析风格\r\n   * @param {stringStyleType} to 转换风格\r\n   * @param {String} str 要转换的字符串\r\n   * @return {String} 转换得到的字符串\r\n   */\r\n  static convert (from, to, str) {\r\n    return StringStyleUtil.getConverter(from, to).convert(str)\r\n  }\r\n}\r\n","/**\r\n * 递归使对象不可变\r\n * @param {Object} obj 任何非空对象\r\n * @returns {Object} 新的不可变对象\r\n */\r\nexport function deepFreeze (obj) {\r\n  if (obj === undefined || obj === null) {\r\n    return\r\n  }\r\n  // 数组和对象分别处理\r\n  if (obj instanceof Array) {\r\n    obj.forEach(v => {\r\n      if (typeof v === 'object') {\r\n        deepFreeze(v)\r\n      }\r\n    })\r\n  } else if (obj instanceof Object) {\r\n    Object.values(obj).forEach(v => {\r\n      if (typeof v === 'object') {\r\n        deepFreeze(v)\r\n      }\r\n    })\r\n  }\r\n  return Object.freeze(obj)\r\n}\r\n","/**\r\n * 包装对象，使其成为可以任意深度调用而不会出现 undefined 调用的问题\r\n * 注意: 该函数不能进行递归调用（{@link JSON.stringfy}），一定会造成堆栈溢出的问题（RangeError: Maximum call stack size exceeded）\r\n * @param {Object} object 任意一个 Object 对象\r\n * @returns {Object} 包装后的对象\r\n */\r\nexport function deepProxy (object) {\r\n  const handler = {\r\n    get (target, k) {\r\n      Reflect.set(\r\n        target,\r\n        k,\r\n        Reflect.has(target, k) ? Reflect.get(target, k) : {}\r\n      )\r\n      const v = Reflect.get(target, k)\r\n      if (typeof v === 'object') {\r\n        return new Proxy(v, handler)\r\n      }\r\n      return v\r\n    },\r\n  }\r\n  return new Proxy(object, handler)\r\n}\r\n","/**\r\n * 将函数包装为柯里化函数\r\n * 注: 该函数模仿了 Lodash 的 curry 函数\r\n * @param {Function} fn 需要包装的函数\r\n * @param  {...any} args 应用的部分参数\r\n * @returns {Function} 包装后的函数\r\n */\r\nexport const curry = (fn, ...args) => {\r\n  const realArgs = args.filter(arg => arg !== curry._)\r\n  if (realArgs.length >= fn.length) {\r\n    return fn(...realArgs)\r\n  }\r\n\r\n  function innerFn (...otherArgs) {\r\n    // 记录需要移除补到前面的参数\r\n    const removeIndexSet = new Set()\r\n    let i = 0\r\n    const newArgs = args.map(arg => {\r\n      if (\r\n        arg !== curry._ ||\r\n        otherArgs[i] === undefined ||\r\n        otherArgs[i] === curry._\r\n      ) {\r\n        return arg\r\n      }\r\n      removeIndexSet.add(i)\r\n      // 每次补偿前面的 curry._ 参数计数器 +1\r\n      return otherArgs[i++]\r\n    })\r\n    const newOtherArgs = otherArgs.filter((_v, i) => !removeIndexSet.has(i))\r\n    return curry(fn, ...newArgs, ...newOtherArgs)\r\n  }\r\n\r\n  // 自定义 toString 函数便于调试\r\n  innerFn.toString = () =>\r\n    `name: ${fn.name}, args: [${args.map(o => o.toString()).join(', ')}]`\r\n  innerFn._curry = true\r\n\r\n  return innerFn\r\n}\r\n\r\n/**\r\n * 柯里化的占位符，需要应用后面的参数时使用\r\n * 例如 {@link curry(fn)(curry._, 1)} 意味着函数 fn 的第二个参数将被确定为 1\r\n */\r\ncurry._ = Symbol('_')\r\n","import { groupBy } from './groupBy'\r\nimport { returnItself } from '../function/returnItself'\r\n\r\n/**\r\n * 快速根据指定函数对数组进行排序\r\n * 注: 使用递归实现，对于超大数组（其实前端的数组不可能特别大吧？#笑）可能造成堆栈溢出\r\n * @param {Array} arr 需要排序的数组\r\n * @param {Function} [kFn=returnItself] 对数组中每个元素都产生可比较的值的函数，默认返回自身进行比较\r\n * @returns {Array} 排序后的新数组\r\n */\r\nexport function sortBy (arr, kFn = returnItself) {\r\n  // 边界条件，如果传入数组的值\r\n  if (arr.length <= 1) {\r\n    return arr\r\n  }\r\n  // 根据中间值对数组分治为两个数组\r\n  const medianIndex = Math.floor(arr.length / 2)\r\n  const newArr = arr.slice()\r\n  const median = newArr.splice(medianIndex, 1)[0]\r\n  const medianValue = kFn(median)\r\n  const map = groupBy(newArr, item => kFn(item) < medianValue)\r\n  // 对两个数组分别进行排序\r\n  return [\r\n    ...sortBy(map.get(true) || [], kFn),\r\n    median,\r\n    ...sortBy(map.get(false) || [], kFn),\r\n  ]\r\n}\r\n","import { dateFormat } from './dateFormat'\r\nimport { dateParse } from './dateParse'\r\n\r\n/**\r\n * 日期格式化器\r\n * 包含格式化为字符串和解析字符串为日期的函数\r\n */\r\nexport class DateFormatter {\r\n  /**\r\n   * 构造函数\r\n   * @param {String} fmt 日期时间格式\r\n   */\r\n  constructor (fmt) {\r\n    /**\r\n     * @field 日期时间格式\r\n     */\r\n    this.fmt = fmt\r\n  }\r\n  /**\r\n   * 格式化\r\n   * @param {Date} date 需要格式化的日期\r\n   * @returns {String} 格式化的字符串\r\n   */\r\n  format (date) {\r\n    return dateFormat(date, this.fmt)\r\n  }\r\n  /**\r\n   * 解析\r\n   * @param {String} str 字符串\r\n   * @returns {Date} 解析得到的日期\r\n   */\r\n  parse (str) {\r\n    return dateParse(str, this.fmt)\r\n  }\r\n  /**\r\n   * 将日期时间字符串转换为前端指定格式的字符串\r\n   * 主要适用场景是前端接收到后端的日期时间一般是一个字符串，然而需要自定义格式的时候还必须先创建 {@link Date} 对象才能格式化，略微繁琐，故使用该函数\r\n   * @param {String} str 字符串\r\n   * @param {String} [parseFmt=undefined] 解析的日期时间格式。默认直接使用 {@link new Date()} 创建\r\n   * @returns {String} 转换后得到的字符串\r\n   */\r\n  strFormat (str, parseFmt) {\r\n    const date = parseFmt ? dateParse(str, parseFmt) : new Date(str)\r\n    return dateFormat(date, this.fmt)\r\n  }\r\n}\r\n\r\n/**\r\n * 日期格式化器\r\n */\r\nDateFormatter.dateFormatter = new DateFormatter('yyyy-MM-dd')\r\n/**\r\n * 时间格式化器\r\n */\r\nDateFormatter.timeFormatter = new DateFormatter('hh:mm:ss')\r\n/**\r\n * 日期时间格式化器\r\n */\r\nDateFormatter.dateTimeFormatter = new DateFormatter('yyyy-MM-dd hh:mm:ss')\r\n","import { curry } from './curry'\r\n\r\n/**\r\n * 连接两个函数并自动柯里化\r\n * @param {Function} fn1 第一个函数\r\n * @param {Function} fn2 第二个函数\r\n * @returns {Function} 连接后的函数\r\n */\r\nconst _compose = (fn1, fn2) => {\r\n  return function (...args) {\r\n    const res = curry(fn1, ...args)\r\n    // 如果这个函数的参数不足，则返回它\r\n    // @ts-ignore\r\n    if (res instanceof Function && res._curry === true) {\r\n      return _compose(res, fn2)\r\n    }\r\n    return curry(fn2, res)\r\n  }\r\n}\r\n\r\n/**\r\n * 将多个函数组合起来\r\n * 前面函数的返回值将变成后面函数的第一个参数，如果到了最后一个函数执行完成，则直接返回\r\n * 该函数是自动柯里化，将对所有传入的函数进行柯里化处理\r\n * @param  {...Function} fns 多个需要连接函数\r\n * @returns {Function} 连接后的柯里化函数\r\n */\r\nexport const compose = (...fns) =>\r\n  // TODO 反向连接就可以了?\r\n  fns.reduceRight((fn1, fn2) => _compose(fn2, fn1))\r\n"],"names":["regexp","DateConstants","dateConstants"],"mappings":"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"}